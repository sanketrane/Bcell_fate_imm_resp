group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955))%>%
bind_cols("timeseries" = ts_pred)
GCfractions_pred <- as.data.frame(fit, pars = "CAR_GCcounts_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955))%>%
bind_cols("timeseries" = ts_pred)
Y3pred <- as.data.frame(fit, pars = "y3_mean_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955)) %>%
bind_cols("timeseries" = ts_pred)
GCcounts_pred <- as.data.frame(fit, pars = "GCcounts_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955))%>%
bind_cols("timeseries" = ts_pred)
Y4pred <- as.data.frame(fit, pars = "y4_mean_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955)) %>%
bind_cols("timeseries" = ts_pred)
Y5pred <- as.data.frame(fit, pars = "y5_mean_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955))%>%
bind_cols("timeseries" = ts_pred)
Y6pred <- as.data.frame(fit, pars = "y6_mean_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.045),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.955)) %>%
bind_cols("timeseries" = ts_pred)
#### plots
p1 <- ggplot() +
#geom_hline(yintercept = exp(10.8))+
geom_line(data = Y1pred, aes(x = timeseries, y = median), col =2) +
geom_ribbon(data = Y1pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=2, alpha = 0.25)+
geom_line(data = Y4pred, aes(x = timeseries, y = median), col =4) +
geom_ribbon(data = Y4pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=4, alpha = 0.25)+
#geom_ribbon(data = MZfractions_pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=2, alpha = 0.25)+
geom_point(data = imm_data, aes(x = days.post.imm, y = CAR_MZB_numbers), col=2) +
geom_point(data = imm_N2ko_data, aes(x = days.post.imm, y = CAR_MZB_numbers), col=4) +
labs(title=paste("CAR positive MZ B cells"),  y=NULL, x="Days post immunization") +
xlim(0, 30) +
scale_y_continuous(limits = c(2e3, 3e5), trans="log10", breaks=c(1e4, 1e5, 1e6, 1e3, 1e8), minor_breaks = log10minorbreaks, labels =fancy_scientific) +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal")
p2 <- ggplot() +
geom_line(data = Y2pred, aes(x = timeseries, y = median), col =2) +
geom_ribbon(data = Y2pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=2, alpha = 0.15)+
#geom_ribbon(data = MZfractions_pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=2, alpha = 0.25)+
geom_point(data = imm_data, aes(x = days.post.imm, y = CAR_GCB_numbers), col=2) +
#geom_line(data = Y5pred, aes(x = timeseries, y = median), col =2) +
#geom_ribbon(data = Y5pred, aes(x = timeseries, ymin = lb, ymax = ub), fill="#ba6dd1", alpha = 0.15)+
#geom_ribbon(data = MZfractions_pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=2, alpha = 0.25)+
geom_point(data = imm_N2ko_data, aes(x = days.post.imm, y = CAR_GCB_numbers), col=4) +
labs(title=paste("CAR positive GC B cells"),  y=NULL, x="Days post immunization") +
xlim(0, 30) +
scale_y_continuous(limits = c(5e3, 1e7), trans="log10", breaks=c(1e4, 1e5, 1e6, 1e7, 1e8), minor_breaks = log10minorbreaks, labels =fancy_scientific) +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal")
p3 <- ggplot() +
geom_line(data = Y3pred, aes(x = timeseries, y = median), col =2) +
geom_ribbon(data = Y3pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=2, alpha = 0.15)+
#geom_ribbon(data = GCcounts_pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=4, alpha = 0.25)+
geom_point(data = imm_data, aes(x = days.post.imm, y = GCB_cell_numbers), col=2) +
#geom_line(data = Y6pred, aes(x = timeseries, y = median), col ="#e63590") +
#geom_ribbon(data = Y6pred, aes(x = timeseries, ymin = lb, ymax = ub), fill="#ba6dd1", alpha = 0.25)+
#geom_ribbon(data = GCcounts_pred, aes(x = timeseries, ymin = lb, ymax = ub), fill=4, alpha = 0.25)+
geom_point(data = imm_N2ko_data, aes(x = days.post.imm, y = GCB_cell_numbers), col=4) +
xlim(0, 30) +
labs(title=paste("Total numbers of GC B cells"),  y=NULL, x="Days post immunization") +
scale_y_continuous(limits = c(5e3, 1e7), trans="log10", breaks=c(1e4, 1e5, 1e6, 1e7, 1e8), minor_breaks = log10minorbreaks, labels =fancy_scientific) +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal")
### Residual plots
resid_d1  <- t(as.data.frame(fit, pars = "resid_d1"))[,1]
resid_d2  <- t(as.data.frame(fit, pars = "resid_d2"))[,1]
resid_d3  <- t(as.data.frame(fit, pars = "resid_d3"))[,1]
p1.1 <- ggplot() +
geom_hline(yintercept = 0, linetype=2) +
geom_point(data = (imm_data), aes(x = days.post.imm, y = resid_d1), col=2) +
labs(title=paste("Residuals CAR MZ counts fit"),  y=NULL, x="Time") +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal")
p2.1 <- ggplot() +
geom_hline(yintercept = 0, linetype=2) +
geom_point(data = imm_data, aes(x = days.post.imm, y = resid_d2), col=6) +
labs(title=paste("Residuals CAR GC counts fit"),  y=NULL, x="Time") +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal")
p3.1 <- ggplot() +
geom_hline(yintercept = 0, linetype=2) +
geom_point(data = imm_data, aes(x = days.post.imm, y = resid_d3), col=4) +
labs(title=paste("Residuals GC counts fit"),  y=NULL, x="Time") +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal")
cowplot::plot_grid(p1, p2,  p3, p1.1, p2.1, p3.1, nrow  = 2)
## saving  plots for quality control
pdf(file = file.path(outputDir, paste(modelName,"StanPlots%03d.pdf", sep = "")),
width = 14, height = 4, onefile = FALSE, useDingbats = FALSE)
cowplot::plot_grid(p1, p2,  p3, ncol  = 3)
dev.off()
################################################################################################
### parameters table
ptable <- monitor(as.array(fit, pars = parametersToPlot), warmup = 0, print = FALSE)
out_table <- ptable[1:num_pars, c(1, 3, 4, 8)]
out_table
write.csv(out_table, file = file.path(outputDir, paste0('params_', modelName, ".csv")))
#alpha_pred <- alpha_shape(seq(4, 30, length.out=500), out_table$mean[2], out_table$mean[7])
alpha_pred <- as.data.frame(fit, pars = "alpha_pred") %>%
gather(factor_key = TRUE) %>%
group_by(key) %>%
summarize(lb = quantile(value, probs = 0.16),
median = quantile(value, probs = 0.5),
ub = quantile(value, probs = 0.84))%>%
bind_cols("timeseries" = ts_pred)
p4 <- ggplot() +
#geom_line(aes(x = seq(4, 30, length.out=500), y = alpha_pred), col =4, size=1.52) +
geom_line(data = alpha_pred, aes(x = timeseries, y = median), col ="#e63590") +
geom_ribbon(data = alpha_pred, aes(x = timeseries, ymin = lb, ymax = ub), fill="#ba6dd1", alpha = 0.25)+
labs(title=paste("Time dependent influx of FO B cells into GC"),  y=NULL, x="Days post immunization") +
myTheme + theme(legend.position = c(0.5, 0.85), legend.direction = "horizontal") +
scale_x_log10() #+ scale_y_log10(limits=c(1e-5, 1))
p4
## saving  plots for parameter estimates
pdf(file = file.path(outputDir, paste(modelName,"ExtraPlots%03d.pdf", sep = "")),
width = 5, height = 4, onefile = FALSE, useDingbats = FALSE)
p4
dev.off()
## clearing the environment
rm(list = ls())
gc()
library(rstan)
library(loo)
library(tidyverse)
####################################################################################
## Setting all the directories for opeartions
projectDir <- getwd()
scriptDir <- file.path(projectDir, "Rscripts")
modelDir <- file.path(projectDir, "models")
dataDir <- file.path(projectDir, "datafiles")
toolsDir <- file.path(scriptDir, "tools")
outputDir <- file.path(projectDir, "output_fit")
saveDir <- file.path(projectDir, 'save_csv')
LooDir <- file.path('loo_fit')
## model specific details that needs to be change for every run
modelName1 <- "totFOB_MZB_timeinflux"
modelName2 <- "carGC_MZB_timeinflux"
# compiling multiple stan objects together that ran on different nodes
stanfit1 <- read_stan_csv(file.path(saveDir, paste0(modelName1, "_1", ".csv")))
stanfit2 <- read_stan_csv(file.path(saveDir, paste0(modelName1, "_2",".csv")))
stanfit3 <- read_stan_csv(file.path(saveDir, paste0(modelName1, "_3", ".csv")))
stanfit4 <- read_stan_csv(file.path(saveDir, paste0(modelName1, "_4",".csv")))
stanfit5 <- read_stan_csv(file.path(saveDir, paste0(modelName1, "_5", ".csv")))
stanfit6 <- read_stan_csv(file.path(saveDir, paste0(modelName1, "_6",".csv")))
fit1 <- sflist2stanfit(list(stanfit1, stanfit2, stanfit3, stanfit4, stanfit5, stanfit6))
compiling multiple stan objects together that ran on different nodes
stanfit1 <- read_stan_csv(file.path(saveDir, paste0(modelName2, "_1", ".csv")))
stanfit2 <- read_stan_csv(file.path(saveDir, paste0(modelName2, "_2",".csv")))
stanfit3 <- read_stan_csv(file.path(saveDir, paste0(modelName2, "_3", ".csv")))
stanfit4 <- read_stan_csv(file.path(saveDir, paste0(modelName2, "_4",".csv")))
stanfit5 <- read_stan_csv(file.path(saveDir, paste0(modelName2, "_5", ".csv")))
stanfit6 <- read_stan_csv(file.path(saveDir, paste0(modelName2, "_6",".csv")))
fit2 <- sflist2stanfit(list(stanfit1, stanfit2, stanfit3, stanfit4, stanfit5, stanfit6))
#### parameter plots
car_fob_time <- function(t){
F0 = exp(11.763019); B0 = exp(4.717021); n = 5.092933;
X = 7.121932 ;  q = 6.475884;
F0 + (B0 * t^n) * (1 - ((t^q)/((X^q) + (t^q))))
}
CAR_FOB <- sapply(ts_pred, car_fob_time)
#### parameter plots
car_fob_time <- function(t){
F0 = exp(11.763019); B0 = exp(4.717021); n = 5.092933;
X = 7.121932 ;  q = 6.475884;
F0 + (B0 * t^n) * (1 - ((t^q)/((X^q) + (t^q))))
}
CAR_FOB <- sapply(ts_pred, car_fob_time)
#### parameter plots
ts_pred <- seq(4, 30, length.out = 500)
car_fob_time <- function(t){
F0 = exp(11.763019); B0 = exp(4.717021); n = 5.092933;
X = 7.121932 ;  q = 6.475884;
F0 + (B0 * t^n) * (1 - ((t^q)/((X^q) + (t^q))))
}
CAR_FOB <- sapply(ts_pred, car_fob_time)
matrix_of_draws1 <- as.data.frame(fit1)   #matrix of parameter draws
alpha1_pred1 <- quantile(matrix_of_draws1$alpha1* (CAR_FOB + exp(17.15)), probs = c(0.5, 0.025, 0.975))
lambda_WT_pred1 <- quantile(1/matrix_of_draws1$lambda_WT, probs = c(0.5, 0.025, 0.975))
lambda_N2KO_pred1 <- quantile(1/matrix_of_draws1$lambda_N2KO, probs = c(0.5, 0.025, 0.975))
delta_pred1 <- quantile(1/matrix_of_draws1$delta, probs = c(0.5, 0.025, 0.975))
mu_pred1 <- quantile(1/matrix_of_draws1$mu, probs = c(0.5, 0.025, 0.975))
parnames <- c('lambda_WT', 'lambda_N2KO', 'delta', "mu")
df_pars1 <- data.frame(t(data.frame(lambda_WT_pred1, lambda_N2KO_pred1, delta_pred1, mu_pred1))) %>%
mutate(parname = parnames,
model = "M1")
matrix_of_draws2 <- as.data.frame(fit2)   #matrix of parameter draws
alpha1_pred2 <- quantile(matrix_of_draws2$alpha1* (CAR_FOB + exp(17.15)), probs = c(0.5, 0.025, 0.975))
lambda_WT_pred2 <- quantile(1/matrix_of_draws2$lambda_WT, probs = c(0.5, 0.025, 0.975))
lambda_N2KO_pred2 <- quantile(1/matrix_of_draws2$lambda_N2KO, probs = c(0.5, 0.025, 0.975))
delta_pred2 <- quantile(1/matrix_of_draws2$delta, probs = c(0.5, 0.025, 0.975))
mu_pred2 <- quantile(1/matrix_of_draws2$mu, probs = c(0.5, 0.025, 0.975))
parnames <- c('lambda_WT', 'lambda_N2KO', 'delta', "mu")
df_pars2 <- data.frame(t(data.frame(lambda_WT_pred2, lambda_N2KO_pred2, delta_pred2, mu_pred2))) %>%
mutate(parname = parnames,
model = "M2")
names(df_pars) <- c('Estimates', 'par_lb', 'par_ub', 'param')
all_pars_df <- rbind(df_pars1, df_pars2)
names(all_pars_df) <- c('Estimates', 'par_lb', 'par_ub', 'param')
View(all_pars_df)
names(all_pars_df) <- c('Estimates', 'par_lb', 'par_ub', 'param', "model")
ggplot(df_pars)+
geom_point(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=param),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
geom_point(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=param),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
#### plotting style
myTheme <- theme(text = element_text(size = 12), axis.text = element_text(size = 12),
axis.title =  element_text(size = 12, face = "bold"),
plot.title = element_text(size=12,  hjust = 0.5, face = "bold"),
legend.background = element_blank(), legend.key = element_blank())
# setting ggplot theme for rest fo the plots
theme_set(theme_bw())
ggplot(all_pars_df)+
geom_point(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=param),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
geom_point(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
geom_scatter(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
geom_jitter(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
geom_boxplot(aes(y=Estimates, x=param, col=model)
)
# setting ggplot theme for rest fo the plots
theme_set(theme_bw())
ggplot(all_pars_df)+
geom_boxplot(aes(y=Estimates, x=param, col=model))
#geom_jitter(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05))
ggplot(all_pars_df)+
#geom_boxplot(aes(y=Estimates, x=param, col=model))
geom_jitter(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
#geom_boxplot(aes(y=Estimates, x=param, col=model))
geom_jitter(aes(y=Estimates, x=param, col=model), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()+
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
#geom_boxplot(aes(y=Estimates, x=param, col=model))
geom_boxplot(aes(y=Estimates, x=as.factor(param), col= as.factor(model)), size = 3) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()+
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
#geom_boxplot(aes(y=Estimates, x=param, col=model))
geom_boxplot(aes(y=Estimates, x=as.factor(param), col= as.factor(model)), size = 3) +
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()+
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
#geom_boxplot(aes(y=Estimates, x=param, col=model))
geom_boxplot(aes(y=Estimates, x=as.factor(param), col= as.factor(model)), size = 3) +
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
# size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()+
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df)+
geom_boxplot(aes(y=Estimates, x=as.factor(param), col= as.factor(model)), size = 3) +
geom_jitter(position=position_jitter(0.1))
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model))+
geom_boxplot(), size = 3) + scale_fill_brewer(palette="Blues") +
geom_jitter(position=position_jitter(0.1))+
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
# size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()+
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
geom_boxplot(size = 3) + scale_fill_brewer(palette="Blues") +
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_boxplot() + scale_fill_brewer(palette="Blues") +
geom_jitter(position=position_jitter(0.1))+
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
# size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()+
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_boxplot() + scale_fill_brewer(palette="Blues") +
geom_jitter(position=position_jitter(0.1)) +
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
# size=0.8,  position=position_dodge(0.05)) +
scale_y_log10()
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_jitter(position=position_jitter(0.1)) +
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
# size=0.8,  position=position_dodge(0.05)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_jitter(position=position_jitter(0.2)) +
#geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
# size=0.8,  position=position_dodge(0.05)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_jitter(position=position_jitter(0.2)) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
))
# setting ggplot theme for rest fo the plots
theme_set(theme_bw())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_jitter(position=position_jitter(0.2)) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.05)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4)) +
geom_linerange(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4)) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4)) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,width=0.1, linetype=2,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4)) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
size=0.8,width=0.1, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4)) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.1, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4)) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4), size=3) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4), size=3) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
#scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=as.factor(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4), size=3) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4), size=3) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme + theme(axis.text.x=element_blank(),
axis.title.x=element_blank())
ggplot(all_pars_df, aes(y=Estimates, x=(param), col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4), size=3) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme
ggplot(all_pars_df, aes(y=Estimates, x=param, col= as.factor(model)))+
geom_point(position=position_dodge(width=0.4), size=3) +
geom_errorbar(aes(y=Estimates, ymin=par_lb, ymax=par_ub, x=param, col=model),
width=0.2, linetype=1,  position=position_dodge(0.4)) +
scale_y_log10() +
#scale_color_manual(values = c(4, 3, 2, 2, 2), label = real_modelname)+
#facet_wrap(~ param) + scale_y_log10() +
myTheme
alpha1_pred2
